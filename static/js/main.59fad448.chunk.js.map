{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/api.js","App.js","index.js"],"names":["MovieCard","Title","Plot","Poster","imdbID","className","src","alt","href","MoviesList","movies","map","movie","key","FindMovie","addMovie","useState","inputValue","setValue","setMovie","movieError","setMovieError","fetchMovie","a","title","fetch","then","res","json","catch","error","Error","action","method","onSubmit","e","preventDefault","htmlFor","type","id","placeholder","classNames","value","onChange","target","onClick","App","findedMovie","availableMovies","every","ReactDOM","render","document","getElementById"],"mappings":"8UAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,YAFuB,MAEhB,GAFgB,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,OAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAI,qCAAgCJ,IAAvC,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAMR,QAAYQ,S,uCCF3BE,G,MAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACVC,mBAAS,IADC,mBAClCC,EADkC,KACtBC,EADsB,OAEfF,mBAAS,IAFM,mBAElCJ,EAFkC,KAE3BO,EAF2B,OAGLH,oBAAS,GAHJ,mBAGlCI,EAHkC,KAGtBC,EAHsB,KAKnCC,EAAU,uCAAG,4BAAAC,EAAA,sECZIC,EDaOP,ECbEQ,MAAM,GAAD,OAFtB,2CAEsB,cAAkBD,IACtDE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,SAAAC,GAAK,OAAIA,KDUG,QACXH,EADW,QAGTI,OACNV,GAAc,GAGhBF,EAASQ,GAPQ,iCCZI,IAAAH,IDYJ,OAAH,qDAkBhB,OACE,oCACE,0BACEnB,UAAU,aACV2B,OAAO,GACPC,OAAO,MACPC,SAdiB,SAACC,GACtBA,EAAEC,iBAEFrB,EAASH,GACTM,EAAS,IACTC,EAAS,MAWL,yBAAKd,UAAU,SACb,2BAAOA,UAAU,QAAQgC,QAAQ,eAAjC,eAIA,yBAAKhC,UAAU,WACb,2BACEiC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZnC,UAAWoC,IAAW,QAAS,CAAE,YAAarB,IAC9CsB,MAAOzB,EACP0B,SAAU,SAACR,GACTjB,EAASiB,EAAES,OAAOF,OAClBrB,GAAc,OAKlBD,GAEE,uBAAGf,UAAU,kBAAb,yCAON,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEiC,KAAK,SACLjC,UAAU,kBACVwC,QAASvB,GAHX,iBASF,yBAAKjB,UAAU,WACb,4BACEiC,KAAK,SACLjC,UAAU,qBAFZ,sBAUN,yBAAKA,UAAU,aACb,wBAAIA,UAAU,SAAd,WAEEO,GACKA,EAAMmB,OAAS,kBAAC,EAAcnB,GAC/B,qDE1FDkC,EAAM,WAAO,IAAD,EACI9B,mBAAS,IADb,mBAChBN,EADgB,KACRS,EADQ,KAcvB,OACE,yBAAKd,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWU,SAjBA,SAACgC,GAChB5B,GAAS,SAAC6B,GACR,OAAIA,EAAgBC,OAAM,SAAArC,GAAK,OAAIA,EAAMR,SAAW2C,EAAY3C,WAC3D2C,EAAY3C,OACT,GAAN,mBAAW4C,GAAX,CAA4BD,IAGvBC,WCVbE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.59fad448.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  Title,\n  Plot = '',\n  Poster,\n  imdbID,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={Poster}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{Title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {Plot}\n        <br />\n        <a href={`https://www.imdb.com/title/${imdbID}`}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  Title: PropTypes.string.isRequired,\n  Plot: PropTypes.string.isRequired,\n  Poster: PropTypes.string.isRequired,\n  imdbID: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbID} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbID: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovies } from '../../api/api';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [inputValue, setValue] = useState('');\n  const [movie, setMovie] = useState('');\n  const [movieError, setMovieError] = useState(false);\n\n  const fetchMovie = async() => {\n    const res = await getMovies(inputValue);\n\n    if (res.Error) {\n      setMovieError(true);\n    }\n\n    setMovie(res);\n  };\n\n  const addFindedMovie = (e) => {\n    e.preventDefault();\n\n    addMovie(movie);\n    setValue('');\n    setMovie('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        action=\"\"\n        method=\"GET\"\n        onSubmit={addFindedMovie}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': movieError })}\n              value={inputValue}\n              onChange={(e) => {\n                setValue(e.target.value);\n                setMovieError(false);\n              }}\n            />\n          </div>\n          {\n            movieError\n            && (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={fetchMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {\n          movie\n            ? !movie.Error && <MovieCard {...movie} />\n            : <i>Input movie above*</i>\n        }\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=d83d550f';\n\nexport const getMovies = title => fetch(`${BASE_URL}&t=${title}`)\n  .then(res => res.json())\n  .catch(error => error);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App = () => {\n  const [movies, setMovie] = useState([]);\n\n  const addMovie = (findedMovie) => {\n    setMovie((availableMovies) => {\n      if (availableMovies.every(movie => movie.imdbID !== findedMovie.imdbID)\n        && findedMovie.imdbID) {\n        return [...availableMovies, findedMovie];\n      }\n\n      return availableMovies;\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}